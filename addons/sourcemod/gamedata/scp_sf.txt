"Games"
{
	"tf"
	{
		"Offsets"
		{
			"CBaseAnimating::m_pStudioHdr"
			{
				"linux"		"300"
				"windows"	"294"
			}
			"CBaseEntity::ShouldCollide"
			{
				"linux"		"18"
				"windows"	"17"
			}
			"CBasePlayer::ForceRespawn"
			{
				"linux"		"337"
				"windows"	"336"
			}
			"CBaseEntity::ModifyOrAppendCriteria"
			{
				"linux"		"124"
				"windows"	"123"
			}
			"CBasePlayer::m_pCurrentCommand"
			{
				"linux"		"3512"
				"windows"	"3512"
			}
			"CEconItemView::IterateAttributes"
			{
				"linux"		"19"
				"windows"	"18"
			}
			"CTeamplayRoundBasedRules::RoundRespawn"
			{
				"linux"		"231"
				"windows"	"229"
			}
			"CTeamplayRules::SetWinningTeam"
			{
				"linux"		"165"
				"windows"	"164"
			}
			"CTeam::AddPlayer"
			{
				"linux"		"209"
				"windows"	"208"
			}
			"CTeam::RemovePlayer"
			{
				"linux"		"210"
				"windows"	"209"
			}
		}
		"Signatures"
		{
			"AI_CriteriaSet::FindCriterionIndex"
			{
				"linux"		"@_ZNK14AI_CriteriaSet18FindCriterionIndexEPKc"
				"windows"	"\x55\x8B\xEC\x83\xEC\x48\x56\xFF\x75\x08"
			}
			"AI_CriteriaSet::RemoveCriteria"
			{
				"linux"		"@_ZN14AI_CriteriaSet14RemoveCriteriaEPKc"
				"windows"	"\x55\x8B\xEC\x83\xEC\x48\x56\x57\xFF\x75\x08"
			}
			"CBaseAnimating::GetBoneCache"
			{
				"library"	"server"
				"linux"		"@_ZN14CBaseAnimating12GetBoneCacheEv"
				"windows"	"\x55\x8B\xEC\xB8\x10\x18\x00\x00"
			}
			"CLagCompensationManager::StartLagCompensation"
			{
				"library"	"server"
				"linux"		"@_ZN23CLagCompensationManager20StartLagCompensationEP11CBasePlayerP8CUserCmd"
				"windows"	"\x55\x8B\xEC\x83\xEC\x24\x57\x8B\xF9\x89\x7D\xE8"
			}
			"CLagCompensationManager::FinishLagCompensation"
			{
				"library"	"server"
				"linux"		"@_ZN23CLagCompensationManager21FinishLagCompensationEP11CBasePlayer"
				"windows"	"\x55\x8B\xEC\x83\xEC\x38\xA1\x2A\x2A\x2A\x2A\x53"
			}		
			"CTFDroppedWeapon::Create"
			{
				"library"	"server"
				"linux"		"@_ZN16CTFDroppedWeapon6CreateEP9CTFPlayerRK6VectorRK6QAnglePKcPK13CEconItemView"
				"windows"	"\x55\x8B\xEC\x51\xA1\x2A\x2A\x2A\x2A\x80\xB8\x2A\x2A\x2A\x2A\x00\x74\x2A\x33\xC0\x8B\xE5\x5D\xC3"
			}
			"CTFDroppedWeapon::InitDroppedWeapon"
			{
				"library"	"server"
				"linux"		"@_ZN16CTFDroppedWeapon17InitDroppedWeaponEP9CTFPlayerP13CTFWeaponBasebb"
				"windows"	"\x55\x8B\xEC\x83\xEC\x24\x56\x57\x8B\xF9\x8B\x4D\x08"
			}
			"CTFDroppedWeapon::InitPickedUpWeapon"
			{
				"library"	"server"
				"linux"		"@_ZN16CTFDroppedWeapon18InitPickedUpWeaponEP9CTFPlayerP13CTFWeaponBase"
				"windows"	"\x55\x8B\xEC\x83\xEC\x08\xD9\xEE\x53\x56\x57"
			}
			"CTFPlayer::CanPickupDroppedWeapon"
			{
				"library"	"server"
				"linux"		"@_ZN9CTFPlayer22CanPickupDroppedWeaponEPK16CTFDroppedWeapon"
				"windows"	"\x55\x8B\xEC\x53\x8B\x5D\x08\x56\x8B\xF1\x80\xBB\x04\x05\x00\x00\x00"
			}
			"CTFPlayer::DoAnimationEvent"
			{
				"library"	"server"
				"linux"		"@_ZN9CTFPlayer16DoAnimationEventE17PlayerAnimEvent_ti"
				"windows"	"\x55\x8B\xEC\x51\x53\x56\x8B\x35\x2A\x2A\x2A\x2A\x8B\xD9\x8B\xCE"
			}
			"CTFPlayer::DropAmmoPack"
			{
				"library"	"server"
				"linux"		"@_ZN9CTFPlayer12DropAmmoPackERK15CTakeDamageInfobb"
				"windows"	"\x55\x8B\xEC\x83\xEC\x28\x53\x8B\xD9\xC7\x45\xFC\x00\x00\x00\x00"
			}
			"CTFPlayer::GetMaxAmmo"
			{
				"library"	"server"
				"linux"		"@_ZN9CTFPlayer10GetMaxAmmoEii"
				"windows"	"\x55\x8B\xEC\x8B\x45\x0C\x56\x57\x8B\xF9\x83\xF8\xFF\x75\x2A\xFF\xB7\x2A\x2A\x2A\x2A\xEB\x01\x50\xE8"
			}
			"CTFPlayer::RegenThink"
			{
				"library"	"server"
				"linux"		"@_ZN9CTFPlayer10RegenThinkEv"
				"windows"	"\x55\x8B\xEC\x83\xEC\x74\x57\x8B\xF9\x8B\x07"
			}
			"CTFPlayer::SpeakConceptIfAllowed"
			{
				"library"	"server"
				"linux"		"@_ZN9CTFPlayer21SpeakConceptIfAllowedEiPKcPcjP16IRecipientFilter"
				"windows"	"\x55\x8B\xEC\x81\xEC\xE8\x00\x00\x00\x53\x8B\xD9\x89\x5D\xFC"
			}
			"CTFPlayer::Taunt"
			{
				"library"	"server"
				"linux"		"@_ZN9CTFPlayer5TauntE8taunts_ti"
				"windows"	"\x55\x8B\xEC\x81\xEC\xD4\x00\x00\x00\x53\x56\x57\x8B\xF9\xE8"
			}
			"CTFPlayer::TeamFortress_SetSpeed"
			{
				"library"	"server"
				"linux"		"@_ZN9CTFPlayer21TeamFortress_SetSpeedEv"
				"windows"	"\x55\x8B\xEC\xA1\x2A\x2A\x2A\x2A\x83\xEC\x1C\x53"
			}
			"PassServerEntityFilter"
			{
				"library"	"server"
				"linux"		"@_Z22PassServerEntityFilterPK13IHandleEntityS1_"
				"windows"   "\x55\x8B\xEC\x56\x8B\x75\x0C\x85\xF6\x75\x2A\xB0\x01"
			}
		}
		"Functions"
		{
			"CBaseEntity::ModifyOrAppendCriteria"
			{
				"offset"	"CBaseEntity::ModifyOrAppendCriteria"
				"hooktype"	"entity"
				"return"	"void"
				"this"		"entity"
				"arguments"
				{
					"criteriaSet"
					{
						"type"	"int"
					}
				}
			}
			"CBaseEntity::ShouldCollide"
			{
				"offset"	"CBaseEntity::ShouldCollide"
				"hooktype"	"entity"
				"return"	"bool"
				"this"		"entity"
				"arguments"
				{
					"collisionGroup"
					{
						"type"	"int"
					}
					"contentsMask"
					{
						"type"	"int"
					}
				}
			}
			"CBaseAnimating::GetBoneCache"
			{
				"signature"	"CBaseAnimating::GetBoneCache"
				"callconv"	"thiscall"
				"return"	"int"
				"this"		"entity"
			}	
			"CBasePlayer::ForceRespawn"
			{
				"offset"	"CBasePlayer::ForceRespawn"
				"hooktype"	"entity"
				"return"	"void"
				"this"		"entity"
			}
			"CEconItemView::IterateAttributes"
			{
				"offset"	"CEconItemView::IterateAttributes"
				"hooktype"	"raw"
				"return"	"void"
				"this"		"address"
				"arguments"
				{
					"IEconItemAttributeIterator"
					{
						"type"	"objectptr"
					}
				}
			}
			"CTFPlayer::SpeakConceptIfAllowed" 
			{
				"signature"		"CTFPlayer::SpeakConceptIfAllowed"
				"callconv"		"thiscall"
				"return"		"bool"
				"this"			"entity"
				"arguments"
				{
					"iConcept"
					{
						"type"	"int"
					}
					"modifiers"
					{
						"type"	"charptr"
					}
					"pszOutResponseChosen"
					{
						"type"	"charptr"
					}
					"bufsize"
					{
						"type"	"int"
					}
					"IRecipientFilter"
					{
						"type"	"int"
					}
				}
			}
			"CLagCompensationManager::StartLagCompensation"
			{
				"signature"	"CLagCompensationManager::StartLagCompensation"
				"callconv"	"thiscall"
				"return"	"void"
				"this"		"address"
				"arguments"
				{
					"player"
					{
						"type"	"cbaseentity"
					}
					"cmd"
					{
						"type"	"objectptr"
					}
				}
			}
			"CTeamplayRoundBasedRules::RoundRespawn"
			{
				"offset"	"CTeamplayRoundBasedRules::RoundRespawn"
				"hooktype"	"gamerules"
				"return"	"void"
				"this"		"ignore"
			}
			"CTFPlayer::CanPickupDroppedWeapon"
			{
				"signature"	"CTFPlayer::CanPickupDroppedWeapon"
				"callconv"	"thiscall"
				"return"	"bool"
				"this"		"entity"
				"arguments"
				{
					"pWeapon"
					{
						"type"	"cbaseentity"
					}
				}
			}
			"CTFPlayer::DoAnimationEvent"
			{
				"signature"	"CTFPlayer::DoAnimationEvent"
				"callconv"	"thiscall"
				"return"	"void"
				"this"		"entity"
				"arguments"
				{
					"event"
					{
						"type"	"int"
					}
					"nData"
					{
						"type"	"int"
					}
				}
			}
			"CTFPlayer::DropAmmoPack"
			{
				"signature"	"CTFPlayer::DropAmmoPack"
				"callconv"	"thiscall"
				"return"	"void"
				"this"		"entity"
				"arguments"
				{
					"info"
					{
						"type"	"objectptr"
					}
					"bEmpty"
					{
						"type"	"bool"
					}
					"bDisguisedWeapon"
					{
						"type"	"bool"
					}
				}
			}
			"CTFPlayer::GetMaxAmmo"
			{
				"signature"	"CTFPlayer::GetMaxAmmo"
				"callconv"	"thiscall"
				"return"	"int"
				"this"		"entity"
				"arguments"
				{
					"iAmmoIndex"
					{
						"type"	"int"
					}
					"iClassNumber"
					{
						"type"	"int"
					}
				}
			}
			"CTFPlayer::RegenThink"
			{
				"signature"	"CTFPlayer::RegenThink"
				"callconv"	"thiscall"
				"return"	"void"
				"this"		"entity"
			}
			"CTFPlayer::Taunt"
			{
				"signature"	"CTFPlayer::Taunt"
				"callconv"	"thiscall"
				"return"	"void"
				"this"		"entity"
				"arguments"
				{
					"taunts_t"
					{
						"type"	"int"
					}
					"int"
					{
						"type"	"int"
					}
				}
			}
			"PassServerEntityFilter"
			{
				"signature"	"PassServerEntityFilter"
				"callconv"	"cdecl"
				"return"	"bool"
				"arguments"
				{
					"touch"
					{
						"type"	"cbaseentity"
					}
					"pass"
					{
						"type"	"cbaseentity"
					}
				}
			}
		}
	}
}